{"version":3,"sources":["services/httpService.js","services/logService.js","services/authService.js","components/common/navBar.jsx","components/loading.gif","services/todoService.js","components/addTodo.jsx","components/common/searchBox.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/todoTaskTable.jsx","components/common/pagination.jsx","components/clearAll.jsx","utils/paginate.js","components/todoList.jsx","services/doneService.js","components/doneTaskTable.jsx","components/doneList.jsx","components/common/protectedRoute.jsx","components/common/input.jsx","components/common/form.jsx","services/userService.js","components/registerForm.jsx","components/loginForm.jsx","components/common/notFound.jsx","components/editTodoForm.jsx","components/profile.jsx","components/logout.jsx","components/addTodoForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","process","interceptors","response","use","error","status","console","log","logout","window","location","Raven","captureException","toast","message","Promise","reject","http","get","post","delete","put","setJwt","jwt","headers","common","apiEndpoint","tokenKey","login","user","username","password","longerExpiry","rememberMe","data","localStorage","setItem","removeItem","getCurrentUser","getItem","jwtDecode","ex","NavBar","className","to","type","id","Fragment","getTodoList","todos","modifyTask","task","_id","todo","addTask","dueDate","deleteTodo","moveToDone","deleteAllTodos","AddTodo","SearchBox","value","onSearch","onChange","e","currentTarget","name","placeholder","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","this","columns","map","onClick","label","key","Component","TableBody","renderCell","item","content","_","createKey","items","style","maxWidth","overflowWrap","Table","TodoTaskTable","moment","utc","dateCreated","toDate","local","format","color","cursor","title","onMoveToDone","onRemove","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","page","ClearAll","onClearAll","paginate","pageNumber","startIndex","slice","TodoList","state","searchQuery","handleMoveToDone","reload","handleSearch","setState","handleRemove","handlePageChange","handleClearAll","confirm","handleSort","flag","filtered","filter","m","toLowerCase","startsWith","orderBy","length","onEdit","handleEdit","textAlign","maxHeight","objectFit","src","loading","alt","getDoneList","dones","deleteDone","deleteAllDones","DoneTaskTable","done","dateFinished","DoneList","marginLeft","marginRight","ProtectedRoute","component","render","rest","pathname","from","Input","htmlFor","Form","errors","validate","Joi","schema","abortEarly","details","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleInputChange","input","errorMessage","disabled","min","register","RegisterForm","string","email","required","userService","marginTop","padding","width","minWidth","backgroundColor","boxShadow","onSubmit","renderInput","renderButton","LoginForm","boolean","NotFound","EditTodoForm","match","params","Profile","Logout","AddTodoForm","today","renderDateInput","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f41302a.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { logout } from \"./authService\";\r\nimport { log } from \"./logService\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const authenticationError = error.response && error.response.status === 403;\r\n  if (authenticationError) {\r\n    console.log(\"auth error occ\");\r\n    logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    log(error);\r\n    toast.error(error.message);\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nconst http = {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  delete: axios.delete,\r\n  put: axios.put,\r\n  setJwt,\r\n};\r\nexport default http;\r\n","import Raven from \"raven-js\";\r\n\r\nexport function init() {\r\n  Raven.config(\r\n    \"https://6b75613687d94cbb9b6e81cc6bbf6854@o914975.ingest.sentry.io/5854642\",\r\n    {\r\n      release: \"1-0-0\",\r\n      environment: \"developement-test\",\r\n    }\r\n  ).install();\r\n}\r\n\r\nexport function log(error) {\r\n  Raven.captureException(error);\r\n}\r\n","import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/login\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\nlet refreshId;\r\n\r\nexport async function login(user) {\r\n    const { data: jwt } = await http.post(apiEndpoint, {\r\n        username: user.username,\r\n        password: user.password,\r\n        longerExpiry: user.rememberMe,\r\n    });\r\n\r\n    localStorage.setItem(tokenKey, jwt);\r\n    // if (!user.rememberMe) refresh();\r\n}\r\n\r\nfunction refresh() {\r\n    console.log(\"refresh called\");\r\n    refreshId = setInterval(\r\n        async() => {\r\n            console.log('function called by setInterval');\r\n            try {\r\n                console.log(\"trying to refresh\");\r\n                const { data: jwt } = await http.get(\"/refresh\");\r\n                localStorage.setItem(tokenKey, jwt);\r\n                console.log(\"refresh successfull , new jwt is\", jwt);\r\n            } catch (ex) {\r\n                clearInterval(refreshId);\r\n                console.log(\"Interval was cleared \", refreshId, \"due to \", ex);\r\n            }\r\n        },\r\n        console.log(\"Interval was set \", refreshId));\r\n}\r\n\r\nexport function getJwt() {\r\n    return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    try {\r\n        const jwt = localStorage.getItem(tokenKey);\r\n        const user = jwtDecode(jwt);\r\n        return user;\r\n    } catch (ex) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n    localStorage.setItem(tokenKey, jwt);\r\n}","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport \"bootstrap/js/src/collapse.js\";\r\nimport { getCurrentUser } from \"../../services/authService\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        TodoApp\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          {!getCurrentUser() && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/login\">\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/register\">\r\n                  Register\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n          {getCurrentUser() && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/todoList\">\r\n                  Todo List\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/doneList\">\r\n                  Done List\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/profile\">\r\n                  Profile\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/logout\">\r\n                  Logout\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","export default __webpack_public_path__ + \"static/media/loading.fd73bb71.gif\";","import http from \"./httpService\";\r\nconst apiEndpoint = \"/todos\";\r\n\r\nexport async function getTodoList() {\r\n  const { data: todos } = await http.get(apiEndpoint);\r\n  return todos;\r\n}\r\n\r\nexport async function modifyTask(task, _id) {\r\n  const { data: todo } = await http.put(apiEndpoint + \"/\" + _id, {\r\n    task,\r\n  });\r\n  return todo;\r\n}\r\n\r\nexport async function addTask(task, dueDate) {\r\n  const { data } = await http.post(apiEndpoint, {\r\n    task,\r\n    dueDate,\r\n  });\r\n  return data;\r\n}\r\n\r\nexport async function deleteTodo(_id, moveToDone) {\r\n  try {\r\n    await http.put(apiEndpoint + \"/delete/\" + _id, { moveToDone });\r\n  } catch (ex) {}\r\n}\r\n\r\nexport async function deleteAllTodos() {\r\n  await http.delete(apiEndpoint + \"/all\");\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AddTodo = () => {\r\n  return (\r\n    <div className=\"text-center my-3\">\r\n      <Link to={`/todoList/add`}>\r\n        <button className=\"btn btn-primary\">Add Task</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onSearch }) => {\r\n  return (\r\n    <div className=\"input-group mb-3 custom-class\">\r\n      <input\r\n        onChange={(e) => onSearch(e.currentTarget.value)}\r\n        type=\"text\"\r\n        name=\"query\"\r\n        value={value}\r\n        className=\"form-control\"\r\n        placeholder=\"Search Task...\"\r\n      />\r\n      <div className=\"input-group-append\">\r\n        <button className=\"btn btn-primary btn-sm\">\r\n          <i className=\"fa fa-search\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => {\r\n                column.path && this.raiseSort(column.path);\r\n              }}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { items, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td\r\n                style={{ maxWidth: \"30vw\", overflowWrap: \"break-word\" }}\r\n                key={this.createKey(item, column)}\r\n              >\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, items }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody items={items} columns={columns} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"./common/table\";\r\n\r\nclass TodoTaskTable extends Component {\r\n  columns = [\r\n    { path: \"task\", label: \"Task\" },\r\n    {\r\n      path: \"dateCreated\",\r\n      label: \"Date Created\",\r\n      content: (todo) => {\r\n        return moment(moment.utc(todo.dateCreated).toDate())\r\n          .local()\r\n          .format(\"YYYY-MM-DD HH:mm:ss\");\r\n      },\r\n    },\r\n    {\r\n      path: \"dueDate\",\r\n      label: \"Due Date\",\r\n      content: (todo) => {\r\n        return moment(moment.utc(todo.dueDate).toDate())\r\n          .local()\r\n          .format(\"YYYY-MM-DD HH:mm:ss\");\r\n      },\r\n    },\r\n    {\r\n      label: \"\",\r\n      key: \"done icon\",\r\n      content: (todo) => (\r\n        <i\r\n          style={{ color: \"#42f542\", cursor: \"pointer\" }}\r\n          title=\"mark as done\"\r\n          onClick={() => this.props.onMoveToDone(todo)}\r\n          className=\"fa fa-check-circle icon-class\"\r\n        ></i>\r\n      ),\r\n    },\r\n    {\r\n      label: \"\",\r\n      key: \"edit icon\",\r\n      content: (todo) => (\r\n        <Link to={`/todoList/${todo._id}/${todo.task}`}>\r\n          <i\r\n            style={{ color: \"hotpink\", cursor: \"pointer\" }}\r\n            title=\"edit task\"\r\n            className=\"fa fa-edit icon-class\"\r\n          ></i>\r\n        </Link>\r\n      ),\r\n    },\r\n    {\r\n      key: \"remove icon\",\r\n      content: (todo) => (\r\n        <i\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          title=\"remove task\"\r\n          className=\"fa fa-times-circle icon-class\"\r\n          onClick={() => this.props.onRemove(todo)}\r\n        ></i>\r\n      ),\r\n    },\r\n  ];\r\n  render() {\r\n    const { sortColumn, onSort, todos } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n        items={todos}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoTaskTable;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            onClick={() => onPageChange(page)}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <button className=\"page-link\">{page}</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst ClearAll = (props) => {\r\n  return (\r\n    <div className=\"text-center my-3\">\r\n      <button onClick={props.onClearAll} className=\"btn btn-danger\">\r\n        Clear All\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClearAll;\r\n","export function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return items.slice(startIndex, startIndex + pageSize);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport loading from \"./loading.gif\";\r\nimport {\r\n  deleteAllTodos,\r\n  deleteTodo,\r\n  getTodoList,\r\n} from \"../services/todoService\";\r\nimport AddTodo from \"./addTodo\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport TodoTaskTable from \"./todoTaskTable\";\r\nimport Pagination from \"./common/pagination\";\r\nimport ClearAll from \"./clearAll\";\r\nimport { paginate } from \"../utils/paginate\";\r\n\r\nclass TodoList extends Component {\r\n  state = {\r\n    todos: [],\r\n    searchQuery: \"\",\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    sortColumn: { path: \"task\", order: \"asc\" },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const todos = await getTodoList();\r\n    this.setState({ todos, flag: true });\r\n  }\r\n\r\n  handleMoveToDone = async (todo) => {\r\n    await deleteTodo(todo._id, true);\r\n    window.location.reload();\r\n  };\r\n\r\n  handleSearch = (searchQuery) => {\r\n    this.setState({\r\n      searchQuery,\r\n      currentPage: 1,\r\n    });\r\n  };\r\n\r\n  handleRemove = async (todo) => {\r\n    await deleteTodo(todo._id);\r\n    window.location.reload();\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleClearAll = async () => {\r\n    if (window.confirm(\"Are you sure you want to delete all tasks?\")) {\r\n      await deleteAllTodos();\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  render() {\r\n    let filtered = this.state.todos;\r\n\r\n    if (this.state.searchQuery) {\r\n      filtered = this.state.todos.filter((m) =>\r\n        m.task.toLowerCase().startsWith(this.state.searchQuery.toLowerCase())\r\n      );\r\n    }\r\n\r\n    const sorted = _.orderBy(\r\n      filtered,\r\n      [this.state.sortColumn.path],\r\n      [this.state.sortColumn.order]\r\n    );\r\n    const todos = paginate(sorted, this.state.currentPage, this.state.pageSize);\r\n    if (!this.state.flag)\r\n      return (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <img\r\n            style={{ maxHeight: \"80%\", maxWidth: \"80%\", objectFit: \"contain\" }}\r\n            src={loading}\r\n            alt=\"Loading...\"\r\n          ></img>\r\n        </div>\r\n      );\r\n    return (\r\n      <React.Fragment>\r\n        <h2 style={{ color: \"blueviolet\" }} className=\"text-center\">\r\n          To Do List\r\n        </h2>\r\n        <AddTodo />\r\n        {this.state.todos.length > 0 && (\r\n          <React.Fragment>\r\n            <SearchBox\r\n              value={this.state.searchQuery}\r\n              onSearch={(searchQuery) => this.handleSearch(searchQuery)}\r\n            />\r\n            <TodoTaskTable\r\n              todos={todos}\r\n              sortColumn={this.state.sortColumn}\r\n              onMoveToDone={this.handleMoveToDone}\r\n              onEdit={this.handleEdit}\r\n              onRemove={this.handleRemove}\r\n              onSort={this.handleSort}\r\n            />\r\n            <Pagination\r\n              itemsCount={filtered.length}\r\n              pageSize={this.state.pageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={this.state.currentPage}\r\n            />\r\n            <ClearAll onClearAll={this.handleClearAll} />\r\n          </React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/dones\";\r\n\r\nexport async function getDoneList() {\r\n  const { data: dones } = await http.get(apiEndpoint);\r\n  return dones;\r\n}\r\n\r\nexport async function deleteDone(_id) {\r\n  try {\r\n    await http.delete(apiEndpoint + \"/\" + _id);\r\n  } catch (ex) {}\r\n}\r\n\r\nexport async function deleteAllDones() {\r\n  await http.delete(apiEndpoint + \"/all\");\r\n}\r\n","import moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport Table from \"./common/table\";\r\n\r\nclass DoneTaskTable extends Component {\r\n  columns = [\r\n    { path: \"task\", label: \"Task\" },\r\n    {\r\n      path: \"dateFinished\",\r\n      label: \"Date Finished\",\r\n      content: (done) => {\r\n        return moment(moment.utc(done.dateFinished).toDate())\r\n          .local()\r\n          .format(\"YYYY-MM-DD HH:mm:ss\");\r\n      },\r\n    },\r\n    {\r\n      key: \"remove icon\",\r\n      content: (done) => (\r\n        <i\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          title=\"remove task\"\r\n          className=\"fa fa-times-circle icon-class\"\r\n          onClick={() => this.props.onRemove(done)}\r\n        ></i>\r\n      ),\r\n    },\r\n  ];\r\n  render() {\r\n    const { sortColumn, onSort, dones } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n        items={dones}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default DoneTaskTable;\r\n","import React, { Component } from \"react\";\r\nimport loading from \"./loading.gif\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  deleteAllDones,\r\n  deleteDone,\r\n  getDoneList,\r\n} from \"../services/doneService\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport DoneTaskTable from \"./doneTaskTable\";\r\nimport Pagination from \"./common/pagination\";\r\nimport ClearAll from \"./clearAll\";\r\nimport { paginate } from \"../utils/paginate\";\r\n\r\nclass DoneList extends Component {\r\n  state = {\r\n    dones: [],\r\n    searchQuery: \"\",\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    sortColumn: { path: \"task\", order: \"asc\" },\r\n    error: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const dones = await getDoneList();\r\n    this.setState({ dones, flag: true });\r\n  }\r\n\r\n  handleSearch = (searchQuery) => {\r\n    this.setState({\r\n      searchQuery,\r\n      currentPage: 1,\r\n    });\r\n  };\r\n\r\n  handleRemove = async (todo) => {\r\n    await deleteDone(todo._id);\r\n    window.location.reload();\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleClearAll = async () => {\r\n    if (window.confirm(\"Are you sure you want to delete all tasks?\")) {\r\n      await deleteAllDones();\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  render() {\r\n    let filtered = this.state.dones;\r\n\r\n    if (this.state.searchQuery) {\r\n      filtered = this.state.dones.filter((m) =>\r\n        m.task.toLowerCase().startsWith(this.state.searchQuery.toLowerCase())\r\n      );\r\n    }\r\n\r\n    const sorted = _.orderBy(\r\n      filtered,\r\n      [this.state.sortColumn.path],\r\n      [this.state.sortColumn.order]\r\n    );\r\n    const dones = paginate(sorted, this.state.currentPage, this.state.pageSize);\r\n    if (!this.state.flag)\r\n      return (\r\n        <div className=\"container\">\r\n          <img\r\n            style={{ marginLeft: \"10vw\", marginRight: \"10vw\" }}\r\n            src={loading}\r\n            alt=\"Loading...\"\r\n          ></img>\r\n        </div>\r\n      );\r\n    return (\r\n      <React.Fragment>\r\n        <h2 style={{ color: \"green\" }} className=\"text-center\">\r\n          Done List\r\n        </h2>\r\n        {this.state.dones.length === 0 && (\r\n          <div className=\"text-center\">\r\n            <h3>Nothing to show..Mark some item as done in todo list.</h3>\r\n          </div>\r\n        )}\r\n        {this.state.dones.length > 0 && (\r\n          <React.Fragment>\r\n            <SearchBox\r\n              value={this.state.searchQuery}\r\n              onSearch={(searchQuery) => this.handleSearch(searchQuery)}\r\n            />\r\n            <DoneTaskTable\r\n              dones={dones}\r\n              sortColumn={this.state.sortColumn}\r\n              onRemove={this.handleRemove}\r\n              onSort={this.handleSort}\r\n            />\r\n            <Pagination\r\n              itemsCount={filtered.length}\r\n              pageSize={this.state.pageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={this.state.currentPage}\r\n            />\r\n            <ClearAll onClearAll={this.handleClearAll} />\r\n          </React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DoneList;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { getCurrentUser } from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      path={path}\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        else return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        {...rest}\r\n        name={name}\r\n        id={name}\r\n        className=\"form-control text-center\"\r\n        \r\n      />\r\n\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\n\r\nclass Form extends Component {\r\n  state = { data: {}, errors: {} };\r\n  validate = () => {\r\n    const options = {\r\n      abortEarly: false,\r\n    };\r\n\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n    if (!error) return null;\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n\r\n    if (errors) return;\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleInputChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) {\r\n      errors[input.name] = errorMessage;\r\n    } else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary my-3\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderDateInput(name, label, type = \"text\", min) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        min={min}\r\n        onChange={this.handleInputChange}\r\n        value={data[name]}\r\n        label={label}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        onChange={this.handleInputChange}\r\n        value={data[name]}\r\n        label={label}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/register\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndpoint, {\r\n    username: user.username,\r\n    password: user.password,\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport * as userService from \"../services/userService\";\r\nimport { getCurrentUser } from \"../services/authService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().email().required().label(\"Username\"),\r\n    password: Joi.string().min(5).required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      await userService.register(this.state.data);\r\n      window.location = \"/login\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div\r\n        className=\"text-center mx-auto\"\r\n        style={{\r\n          marginTop: \"10vh\",\r\n          padding: \"2%\",\r\n          width: \"25%\",\r\n          minWidth: \"200px\",\r\n          backgroundColor: \"lightgray\",\r\n          boxShadow:\r\n            \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n        }}\r\n      >\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Email\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getCurrentUser, login } from \"../services/authService\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n      rememberMe: false,\r\n    },\r\n    errors: {}\r\n  };\r\n\r\n  refreshId\r\n\r\n  schema = {\r\n    username: Joi.string().email().required().label(\"Email\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n    rememberMe: Joi.boolean().label(\"Remember me\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      await login(this.state.data);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (\r\n        ex.response &&\r\n        (ex.response.status === 400 || ex.response.status === 404)\r\n      ) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div\r\n        className=\"text-center mx-auto\"\r\n        style={{\r\n          marginTop: \"10vh\",\r\n          padding: \"2%\",\r\n          width: \"25%\",\r\n          minWidth: \"200px\",\r\n          backgroundColor: \"lightgray\",\r\n          boxShadow:\r\n            \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n        }}\r\n      >\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Email\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n\r\n          {this.renderInput(\"rememberMe\", \"Remember Me\", \"checkbox\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n        <h3>OR</h3>\r\n        <Link to=\"/\">forgot password</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { modifyTask } from \"../services/todoService\";\r\n\r\nclass EditTodoForm extends Form {\r\n  state = {\r\n    data: {\r\n      task: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    task: Joi.string().required().label(\"Task\"),\r\n  };\r\n\r\n  componentDidMount() {\r\n    const data = { ...this.state.data };\r\n    data.task = this.props.match.params.task;\r\n    this.setState({ data });\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      await modifyTask(this.state.data.task, this.props.match.params._id);\r\n      window.location = \"/todoList\";\r\n    } catch (ex) {\r\n      if (\r\n        ex.response &&\r\n        (ex.response.status === 400 || ex.response.status === 404)\r\n      ) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"text-center mx-auto\"\r\n        style={{\r\n          marginTop: \"10vh\",\r\n          padding: \"2%\",\r\n          backgroundColor: \"lightgray\",\r\n          boxShadow:\r\n            \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n        }}\r\n      >\r\n        <h3>Modify Task</h3>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"task\", \"Task\")}\r\n          {this.renderButton(\"Modify\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditTodoForm;\r\n","import React from \"react\";\r\nimport { getCurrentUser } from \"../services/authService\";\r\n\r\nconst Profile = () => {\r\n  const user = getCurrentUser();\r\n  return (\r\n    <div>\r\n      <h1>Hello {user.username}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport { logout } from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    logout();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return <p>Logging out...</p>;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport moment from \"moment\";\r\nimport Form from \"./common/form\";\r\nimport { addTask } from \"../services/todoService\";\r\n\r\nclass AddTodoForm extends Form {\r\n  state = {\r\n    data: {\r\n      task: \"\",\r\n      dueDate: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    task: Joi.string().required().label(\"Task\"),\r\n    dueDate: Joi.required().label(\"Due Date\"), //datetime-local check is to be included\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      await addTask(this.state.data.task, this.state.data.dueDate);\r\n      window.location = \"/todoList\";\r\n    } catch (ex) {\r\n      if (\r\n        ex.response &&\r\n        (ex.response.status === 400 || ex.response.status === 404)\r\n      ) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  today = () => {\r\n    return moment().format(\"YYYY-MM-DDThh:mm\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"text-center mx-auto\"\r\n        style={{\r\n          marginTop: \"10vh\",\r\n          padding: \"2%\",\r\n          backgroundColor: \"lightgray\",\r\n          boxShadow:\r\n            \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n        }}\r\n      >\r\n        <h3>Add Task</h3>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"task\", \"Task\")}\r\n          {this.renderDateInput(\r\n            \"dueDate\",\r\n            \"Due Date\",\r\n            \"datetime-local\",\r\n            this.today()\r\n          )}\r\n          {this.renderButton(\"Add\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTodoForm;\r\n","import React, { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport NavBar from \"./components/common/navBar\";\nimport TodoList from \"./components/todoList\";\nimport DoneList from \"./components/doneList\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport RegisterForm from \"./components/registerForm\";\nimport LoginForm from \"./components/loginForm\";\nimport NotFound from \"./components/common/notFound\";\nimport EditTodoForm from \"./components/editTodoForm\";\nimport Profile from \"./components/profile\";\nimport Logout from \"./components/logout\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AddTodoForm from \"./components/addTodoForm\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <ProtectedRoute path=\"/profile\" component={Profile} />\n            <ProtectedRoute path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/todoList/add\" component={AddTodoForm} />\n            <ProtectedRoute\n              path=\"/todoList/:_id/:task\"\n              component={EditTodoForm}\n            />\n            <ProtectedRoute exact path=\"/todoList\" component={TodoList} />\n            <ProtectedRoute path=\"/doneList\" component={DoneList} />\n            <Redirect exact from=\"/\" to=\"/todoList\" />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect to=\"/not-found\" />\n          </Switch>{\" \"}\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport App from \"./App\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}